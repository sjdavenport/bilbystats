#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon May 19 10:32:46 2025

@author: samd
"""
from ollama import AsyncClient
import asyncio
import os
from ollama import ChatResponse
from ollama import chat
import bilbystats as bs
bs.tic()

# content = 'Translate the following sentence: ti amo. Only return the translation.'

response: ChatResponse = chat(model='llama3.2', messages=[
    {'role': 'system', 'content': 'You are a translator. Only return the English translation. Do not add anything else.'},
    {
        'role': 'user',
        'content': text,
    },
])
# or access fields directly from the response object
print(response.message.content)
bs.toc()

# %%
bs.tic()
out = bs.translate('ti amo', 'llama')
print(out)
bs.toc()

bs.tic()
out = bs.ollama(instructions + content)
print(out)
bs.toc()


# %%
text = '''习近平对“十五五”规划编制工作作出重要指示强调

坚持科学决策民主决策依法决策

高质量完成“十五五”规划编制工作

  新华社北京5月19日电 中共中央总书记、国家主席、中央军委主席习近平近日对“十五五”规划编制工作作出重要指示强调，科学制定和接续实施五年规划，是我们党治国理政一条重要经验，也是中国特色社会主义一个重要政治优势。编制和实施“十五五”规划，对于全面落实党的二十大战略部署、推进中国式现代化意义重大。要坚持科学决策、民主决策、依法决策，把顶层设计和问计于民统一起来，加强调研论证，广泛凝聚共识，以多种方式听取人民群众和社会各界的意见建议，充分吸收干部群众在实践中创造的新鲜经验，注重目标任务和政策举措的系统性整体性协同性，高质量完成规划编制工作。

  我国将于2026年开始实施“十五五”规划，目前党中央正在组织起草“十五五”规划建议。根据习近平重要指示精神和规划建议起草工作安排，有关方面近期将通过多种形式征求干部群众、专家学者等对编制“十五五”规划的意见建议。'''
bs.tic()
# out = bs.translate(text, 'deepseek-r1:7b')
out = bs.translate(text, "llama")
bs.toc()
print(out)

# %%
bs.ollama('''amour → love  
je t’aime → I love you  
ti amo →''')

# %%
out = bs.ollama('translate the following text to English:' + text, 'ds')
print(out)


# %%
bs.tic()
out = bs.translate('ti amo', 'llama')
print(out)
bs.toc()


# %%

bs.tic()
path = "./"
print(s)
bs.toc()


# %%
text = '''习近平对“十五五”规划编制工作作出重要指示强调'''
bs.tic()
# out = bs.translate(text, 'deepseek-r1:7b')
out = bs.translate(text, "ds")
bs.toc()
print(out)

# %%
bs.llm_api(content, instructions="", model_name="gpt-4o")

# %%%


async def chat():
    message = {'role': 'user', 'content': 'Why is the sky blue?'}
    response = await AsyncClient().chat(model='llama3.2', messages=[message])

asyncio.run(chat())

# %%


def openai_api(content, instructions="", model_name="gpt-4o"):
    """
    Call the OpenAI API with custom instructions and content.

    This function sends a request to the OpenAI API using the specified model,
    along with provided instructions and user content. It retrieves and returns
    the response content generated by the model.

    ---------------------------------------------------------------------------
    ARGUMENTS:
    instructions : str
        The system or developer-level instructions that guide the model's behavior.
    content : str
        The main user-provided content or prompt to process.
    model_name : str, optional (default="gpt-4o")
        The name of the OpenAI model to use for generating the completion.
        Typically "gpt-4o" or "gpt-4o-mini".

    ---------------------------------------------------------------------------
    OUTPUT:
    output : str
        The generated response content from the OpenAI API.

    ---------------------------------------------------------------------------
    AUTHORS: Samuel Davenport
    ---------------------------------------------------------------------------
    """

    if model_name == "deepseek":
        model_name = "deepseek-chat"

    if model_name in ("gpt-4o", "gpt-4o-mini"):
        openai.api_key = read_api_key("openai")

        # Now you can use the OpenAI client
        client = openai
    elif model_name in ("deepseek-chat"):
        client = OpenAI(api_key=read_api_key("deepseek"),
                        base_url="https://api.deepseek.com")
    completion = client.chat.completions.create(
        model=model_name,
        messages=[
            {"role": "system",
                "content": instructions},
            {
                "role": "user",
                "content": content
            }
        ]
    )
    reponse = completion.choices[0].message
    output = reponse.content
    return output
